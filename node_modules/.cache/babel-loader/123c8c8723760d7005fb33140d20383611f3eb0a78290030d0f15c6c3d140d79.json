{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    cart: [],\n    cartIsVisible: false,\n    totalQuantity: 0\n  },\n  reducers: {\n    addToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.cart.find(item => item.id === newItem.id);\n      if (!existingItem) {\n        state.cart.push({\n          id: newItem.id,\n          title: newItem.title,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n      state.totalQuantity++;\n    },\n    removeFromCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.cart.find(item => item.id === id);\n      if (existingItem.quantity === 1) {\n        state.cart = state.cart.filter(item => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n      }\n      state.totalQuantity--;\n    },\n    showCart(state) {\n      state.cartIsVisible = !state.cartIsVisible;\n    },\n    setCart(state, action) {\n      console.log(action.payload);\n      state.cart = action.payload.cart;\n      state.totalQuantity = action.payload.totalQuantity;\n    }\n  }\n});\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"names":["createSlice","cartSlice","name","initialState","cart","cartIsVisible","totalQuantity","reducers","addToCart","state","action","newItem","payload","existingItem","find","item","id","push","title","price","quantity","totalPrice","removeFromCart","filter","showCart","setCart","console","log","cartActions","actions"],"sources":["C:/Code/Max/Redux_practice/src/components/redux/cartSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState: { cart: [], cartIsVisible: false, totalQuantity: 0 },\r\n  reducers: {\r\n    addToCart(state, action) {\r\n      const newItem = action.payload;\r\n      const existingItem = state.cart.find((item) => item.id === newItem.id);\r\n      if (!existingItem) {\r\n        state.cart.push({\r\n          id: newItem.id,\r\n          title: newItem.title,\r\n          price: newItem.price,\r\n          quantity: 1,\r\n          totalPrice: newItem.price\r\n        });\r\n      } else {\r\n        existingItem.quantity++\r\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price\r\n      }\r\n      state.totalQuantity++\r\n    },\r\n    removeFromCart(state, action) {\r\n        const id = action.payload\r\n        const existingItem = state.cart.find(item => item.id === id)\r\n        if (existingItem.quantity === 1) {\r\n            state.cart = state.cart.filter(item => item.id !== id)\r\n        } else {\r\n            existingItem.quantity--\r\n            existingItem.totalPrice = existingItem.totalPrice - existingItem.price\r\n        }\r\n        state.totalQuantity--\r\n    },\r\n    showCart(state) {\r\n      state.cartIsVisible = !state.cartIsVisible;\r\n    },\r\n    setCart(state, action) {\r\n      console.log(action.payload)\r\n      state.cart = action.payload.cart\r\n      state.totalQuantity = action.payload.totalQuantity\r\n    }\r\n  },\r\n});\r\n\r\nexport const cartActions = cartSlice.actions\r\nexport default cartSlice"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAC5BE,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IAAEC,IAAI,EAAE,EAAE;IAAEC,aAAa,EAAE,KAAK;IAAEC,aAAa,EAAE;EAAE,CAAC;EAClEC,QAAQ,EAAE;IACRC,SAASA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACvB,MAAMC,OAAO,GAAGD,MAAM,CAACE,OAAO;MAC9B,MAAMC,YAAY,GAAGJ,KAAK,CAACL,IAAI,CAACU,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKL,OAAO,CAACK,EAAE,CAAC;MACtE,IAAI,CAACH,YAAY,EAAE;QACjBJ,KAAK,CAACL,IAAI,CAACa,IAAI,CAAC;UACdD,EAAE,EAAEL,OAAO,CAACK,EAAE;UACdE,KAAK,EAAEP,OAAO,CAACO,KAAK;UACpBC,KAAK,EAAER,OAAO,CAACQ,KAAK;UACpBC,QAAQ,EAAE,CAAC;UACXC,UAAU,EAAEV,OAAO,CAACQ;QACtB,CAAC,CAAC;MACJ,CAAC,MAAM;QACLN,YAAY,CAACO,QAAQ,EAAE;QACvBP,YAAY,CAACQ,UAAU,GAAGR,YAAY,CAACQ,UAAU,GAAGV,OAAO,CAACQ,KAAK;MACnE;MACAV,KAAK,CAACH,aAAa,EAAE;IACvB,CAAC;IACDgB,cAAcA,CAACb,KAAK,EAAEC,MAAM,EAAE;MAC1B,MAAMM,EAAE,GAAGN,MAAM,CAACE,OAAO;MACzB,MAAMC,YAAY,GAAGJ,KAAK,CAACL,IAAI,CAACU,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;MAC5D,IAAIH,YAAY,CAACO,QAAQ,KAAK,CAAC,EAAE;QAC7BX,KAAK,CAACL,IAAI,GAAGK,KAAK,CAACL,IAAI,CAACmB,MAAM,CAACR,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;MAC1D,CAAC,MAAM;QACHH,YAAY,CAACO,QAAQ,EAAE;QACvBP,YAAY,CAACQ,UAAU,GAAGR,YAAY,CAACQ,UAAU,GAAGR,YAAY,CAACM,KAAK;MAC1E;MACAV,KAAK,CAACH,aAAa,EAAE;IACzB,CAAC;IACDkB,QAAQA,CAACf,KAAK,EAAE;MACdA,KAAK,CAACJ,aAAa,GAAG,CAACI,KAAK,CAACJ,aAAa;IAC5C,CAAC;IACDoB,OAAOA,CAAChB,KAAK,EAAEC,MAAM,EAAE;MACrBgB,OAAO,CAACC,GAAG,CAACjB,MAAM,CAACE,OAAO,CAAC;MAC3BH,KAAK,CAACL,IAAI,GAAGM,MAAM,CAACE,OAAO,CAACR,IAAI;MAChCK,KAAK,CAACH,aAAa,GAAGI,MAAM,CAACE,OAAO,CAACN,aAAa;IACpD;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAMsB,WAAW,GAAG3B,SAAS,CAAC4B,OAAO;AAC5C,eAAe5B,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}